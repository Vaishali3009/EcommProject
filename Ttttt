package com.rbs.bdd.application.service;

import com.rbs.bdd.infrastructure.config.SoapWebServiceConfig;
import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.ws.server.EndpointInterceptor;
import org.springframework.ws.server.endpoint.interceptor.PayloadValidatingInterceptor;
import org.springframework.xml.xsd.commons.CommonsXsdSchemaCollection;

import java.util.ArrayList;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

/**
 * Unit test class for {@link SoapWebServiceConfig}.
 * This class verifies that Spring SOAP configuration loads XSD schemas correctly
 * and registers the schema-validating interceptor for all SOAP endpoints.
 */
@SpringBootTest
public class SoapWebServiceConfigTest {

    /**
     * Tests whether {@link SoapWebServiceConfig#updateContactXsd()} loads XSD schema successfully
     * from the classpath and returns a non-null {@link CommonsXsdSchemaCollection} instance.
     *
     * @throws Exception if schema loading fails
     */
    @Test
    void testUpdateContactXsdLoadsSuccessfully() throws Exception {
        SoapWebServiceConfig config = new SoapWebServiceConfig();
        CommonsXsdSchemaCollection schemaCollection = config.updateContactXsd();
        assertNotNull(schemaCollection, "XSD Schema Collection should not be null");
    }

    /**
     * Tests whether {@link SoapWebServiceConfig#addInterceptors(List)} adds a
     * {@link PayloadValidatingInterceptor} to the list of endpoint interceptors.
     *
     * @throws Exception if schema loading fails during interceptor initialization
     */
    @Test
    void testAddInterceptorsAddsInterceptor() throws Exception {
        SoapWebServiceConfig config = new SoapWebServiceConfig();
        List<EndpointInterceptor> interceptors = new ArrayList<>();

        config.addInterceptors(interceptors);

        assertFalse(interceptors.isEmpty(), "Interceptor list should not be empty");
        assertTrue(interceptors.get(0) instanceof PayloadValidatingInterceptor, "Interceptor should be of type PayloadValidatingInterceptor");
    }
}





import com.rbs.bdd.infrastructure.config.SoapWebServiceConfig;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

import static org.junit.jupiter.api.Assertions.assertNotNull;

/**
 * Basic Spring Boot test to verify that the {@link SoapWebServiceConfig} bean
 * is correctly loaded into the application context.
 */
@SpringBootTest
public class SoapWebServiceConfigTest {

    /** Autowired instance of the SOAP web service configuration class. */
    @Autowired
    SoapWebServiceConfig config;

    /**
     * Verifies that the {@link SoapWebServiceConfig} bean is loaded properly
     * and is not null when the application context starts.
     */
    @Test
    void contextLoads() {
        assertNotNull(config);
    }
}


