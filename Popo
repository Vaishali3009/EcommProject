package com.rbs.bdd.infrastructure.soap.api;

import com.rbs.bdd.application.port.in.PaymentValidationPort;
import com.rbs.bdd.generated.ValidateArrangementForPaymentRequest;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.ws.WebServiceMessage;
import org.springframework.ws.context.MessageContext;

import static org.mockito.Mockito.*;

/**
 * Unit test for {@link PaymentValidationSoapAdapter}.
 * Ensures that the SOAP endpoint correctly delegates to the orchestrator.
 */
class PaymentValidationSoapAdapterTest {

    private PaymentValidationPort mockPort;
    private PaymentValidationSoapAdapter adapter;

    @BeforeEach
    void setUp() {
        mockPort = mock(PaymentValidationPort.class);
        adapter = new PaymentValidationSoapAdapter(mockPort);
    }

    /**
     * Verifies that the SOAP adapter invokes the orchestrator with the request and response.
     */
    @Test
    void testValidateArrangementForPayment_shouldDelegateToPort() {
        // Arrange
        ValidateArrangementForPaymentRequest request = new ValidateArrangementForPaymentRequest();
        MessageContext mockContext = mock(MessageContext.class);
        WebServiceMessage mockResponse = mock(WebServiceMessage.class);

        when(mockContext.getResponse()).thenReturn(mockResponse);

        // Act
        adapter.validateArrangementForPayment(request, mockContext);

        // Assert
        verify(mockPort, times(1)).validateArrangementForPayment(request, mockResponse);
    }
}
